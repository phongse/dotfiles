#
# Please note not all available settings / options are set here.
# For a full list, see the wiki (basic and advanced configuring)
#

monitor=,preferred,auto,1
workspace=DP-1,1

# Variables / Constants
$MOD = SUPER
$MODSHIFT = ($MOD + SHIFT)
$TERMINAL = footclient
$LAUNCHER = rofi -show run
$FILEMANAGER = ranger
$LOCK = swaylock
$WALLPAPER = ~/pictures/mountain.jpg
$WAIT_FOR_WAYBAR = gdbus wait --session org.kde.StatusNotifierWatcher
#$CURSORTHEME = Catppuccin-Frappe-Blue-Cursors
#$CURSORSIZE = 24

# Auto start once
exec-once=waybar
exec-once=swaybg -m fill -i $WALLPAPER
exec-once=dunst
exec-once=foot --server
exec-once=swayidle
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once=$WAIT_FOR_WAYBAR && exec ~/.config/hypr/scripts/startup.sh     # Applications depending on a Tray from statusbar
#exec-once=hyprctl setcursor $CURSORTHEME $CURSORSIZE


input {
    kb_layout=dk
    kb_variant=
    kb_model=
    kb_options=
    kb_rules=

    follow_mouse=1

    touchpad {
        natural_scroll=true
        disable_while_typing=false
        tap-to-click=false
        middle_button_emulation=true
    }
}

general {
    sensitivity=1.0 # for mouse cursor
    main_mod=$MOD

    gaps_in=0
    gaps_out=0
    border_size=1
    no_border_on_floating=false
    col.active_border=0xff949cbb
    col.inactive_border=0xff303446
    apply_sens_to_raw=0 # whether to apply the sensitivity to raw input (e.g. used by games where you aim using your mouse)
    damage_tracking=full # leave it on full unless you hate your GPU and want to make it suffer
}

misc {
    disable_hyprland_logo=true
    disable_splash_rendering=true
    layers_hog_keyboard_focus=true
    animate_manual_resizes=false
    no_vfr=false
    disable_autoreload=true
}

debug {
    overlay=false
    damage_blink=false
    disable_logs=true
    disable_time=true # disables time logging
}

decoration {
    rounding=0
    #inactive_opacity=0.9
    blur=0
    blur_new_optimizations=1
    blur_size=3 # minimum 1
    blur_passes=1 # minimum 1, more passes = more resource intensive.
    # Your blur "amount" is blur_size * blur_passes, but high blur_size (over around 5-ish) will produce artifacts.
    # if you want heavy blur, you need to up the blur_passes.
    # the more passes, the more you can up the blur_size without noticing artifacts.
    drop_shadow=false
}

animations {
    enabled=false
    animation=windows,1,7,default
    animation=border,1,10,default
    animation=fade,1,10,default
    animation=workspaces,1,6,default
}

dwindle {
    pseudotile=false # enable pseudotiling on dwindle
    force_split=2
    preserve_split=true
    use_active_for_splits=true
}

gestures {
    workspace_swipe=no
}

# windowrules
windowrulev2=workspace 1 silent,title:^(firefox)$
windowrulev2=workspace 3,class:^(Electron)$,title:WebCord


# Center every floating window
windowrulev2=center,floating:1

# VS Code
windowrulev2=float,class:^(codium)$,title:^(Open .+)$

# KeePassXC
windowrulev2=float,class:^(org.keepassxc.KeePassXC)$

# Firefox
windowrulev2=float,title:^(Picture-in-Picture)$
windowrulev2=float,title:^(Firefox — Sharing Indicator)$          # Microphone + webcam indicator
windowrulev2=move 870 35,title:^(Firefox — Sharing Indicator)$    # Microphone + webcam indicator

# binds
bind=$MODSHIFT,Q,killactive,
bind=$MODSHIFT,C,exit,
bind=$MOD,V,togglefloating,
bind=$MOD,P,pseudo
bind=$MOD,F,fullscreen,0
bind=$MOD,T,pin
bind=$MOD,SPACE,togglesplit

bind=$MOD,left,movefocus,l
bind=$MOD,right,movefocus,r
bind=$MOD,up,movefocus,u
bind=$MOD,down,movefocus,d

bind=$MOD,1,workspace,1
bind=$MOD,2,workspace,2
bind=$MOD,3,workspace,3
bind=$MOD,4,workspace,4
bind=$MOD,5,workspace,5
bind=$MOD,6,workspace,6
bind=$MOD,7,workspace,7
bind=$MOD,8,workspace,8
bind=$MOD,9,workspace,9
bind=$MOD,0,workspace,10

bind=$MODSHIFT,1,movetoworkspacesilent,1
bind=$MODSHIFT,2,movetoworkspacesilent,2
bind=$MODSHIFT,3,movetoworkspacesilent,3
bind=$MODSHIFT,4,movetoworkspacesilent,4
bind=$MODSHIFT,5,movetoworkspacesilent,5
bind=$MODSHIFT,6,movetoworkspacesilent,6
bind=$MODSHIFT,7,movetoworkspacesilent,7
bind=$MODSHIFT,8,movetoworkspacesilent,8
bind=$MODSHIFT,9,movetoworkspacesilent,9
bind=$MODSHIFT,0,movetoworkspacesilent,10

bind=$MOD,mouse_down,workspace,e+1
bind=$MOD,mouse_up,workspace,e-1

binde=,XF86MonBrightnessUp,exec,brightnessctl s +20
binde=,XF86MonBrightnessDown,exec,brightnessctl s 20-
binde=,XF86AudioRaiseVolume,exec,pamixer -i 5
binde=,XF86AudioLowerVolume,exec,pamixer -d 5
binde=,XF86AudioMute,exec,pamixer -t

bind=,XF86AudioPlay,exec,mpc toggle
bind=,XF86AudioStop,exec,mpc stop
bind=,XF86AudioPrev,exec,mpc prev
bind=,XF86AudioNext,exec,mpc next

# clients
bind=$MOD,RETURN,exec,$TERMINAL
bind=$MOD,E,exec,$TERMINAL sh -c "$FILEMANAGER"
bind=$MOD,R,exec,$LAUNCHER
bind=$MOD,L,exec,$LOCK

# printscreen
# bind=,Print,exec,grim $(xdg-user-dir PICTURES)/screens/$(date +'%Y-%m-%d-%H%M%S_grim.png') && notify-send 'Screenshot Saved'
# bind=$MOD,Print,exec,grim - | wl-copy && notify-send 'Screenshot Copied to Clipboard'
# bind=$MODSHIFT,Print,exec,slurp | grim -g - - | wl-copy && wl-paste > $(xdg-user-dir PICTURES)/screens/$(date +'%Y-%m-%d-%H%M%S_grim.png') && notify-send 'Screenshot Saved and copied to clipboard'
# bind=$MODSHIFT,S,exec,slurp | grim -g - - | swappy -f -
bind=,Print,exec,grimblast --notify copysave screen
bind=$MOD,Print,exec,grimblast --notify copysave window
bind=SHIFT,Print,exec,grimblast --notify copysave active
bind=$MODSHIFT,S,exec,grimblast --notify copysave area
